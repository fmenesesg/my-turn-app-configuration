FROM golang:alpine as build-oc-cli

ENV OC_RELEASE="release-4.4"

RUN apk add --update --no-cache git less openssh make build-base krb5 krb5-dev \
    && git clone -b $OC_RELEASE https://github.com/openshift/oc.git /go/src/github.com/openshift/oc \
    && cd /go/src/github.com/openshift/oc && make

FROM alpine:latest

ENV DOCKER_VERSION="17.03.1-ce" \
    S2I_VERSION="v1.2.0" S2I_TAG_DISTRIBUTION="2a579ecd-linux-amd64"

# Install dependencies and tools
# RUN apk --update --no-cache add bash curl git less openssh tree go && \
RUN apk --update --no-cache add git less openssh tree && \
    rm -rf /var/lib/apt/lists/*

# Copy oc command from build-oc-cli
COPY --from=build-oc-cli /go/src/github.com/openshift/oc/oc /usr/local/bin/

# Install s2i client
# RUN curl -L -o /tmp/s2i-$S2I_VERSION.tar.gz https://github.com/openshift/source-to-image/releases/download/$S2I_VERSION/source-to-image-$S2I_VERSION-$S2I_TAG_DISTRIBUTION.tar.gz \
#     && tar -xzv -C /tmp -f /tmp/s2i-$S2I_VERSION.tar.gz \
#     && mv /tmp/s2i /usr/local/bin \
#     && rm -rf /tmp/s2i*

# Install Docker CLI
# RUN curl -L -o /tmp/docker-$DOCKER_VERSION.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_VERSION.tgz \
#     && tar -xz -C /tmp -f /tmp/docker-$DOCKER_VERSION.tgz \
#     && mv /tmp/docker/docker /usr/local/bin \
#     && rm -rf /tmp/docker-$DOCKER_VERSION /tmp/docker

# Prepare folders for Tekton pipelines steps
RUN mkdir -p /workspace /tekton/results && \
    chmod -R 775 /tekton /workspace

VOLUME /src
WORKDIR /src
