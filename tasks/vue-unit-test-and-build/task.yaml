apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: vue-unit-test-and-build
spec:
  workspaces:
  - name: npm-modules
    description: The node packages needed for this app
    mountPath: /src/frontend/node_modules
  volumes:
  - name: source-code
    emptyDir: {}
  params:
  - name: url
    description: git url to clone
    type: string
  - name: revision
    description: git revision to checkout (branch, tag, sha, refâ€¦)
    type: string
    default: master
  - name: subdirectory
    description: subdirectory inside the "output" workspace to clone the git repo into
    type: string
    default: "frontend"
  resources:
    outputs:
    - name: tag
      type: string
  results:
  - name: tag
    description: The new version of this app generated after test it
  steps:
  - name: clone
    image: quay.io/rshop/git-alpine:master
    script: |
      #!/usr/bin/env sh
      git clone --branch "$(inputs.params.revision)" "$(inputs.params.url)" "$(volumes.source-code.path)"
    volumeMounts:
    - name: source-code
      mountPath: /src
  - name: test-lint-and-build
    image: quay.io/rshop/npm-alpine:master
    script: |
      #!/usr/bin/env sh
      cd "$(volumes.source-code.path)/$(inputs.params.subdirectory)"
      npm install
      npm run test:unit
      npm run lint
      npm run build
    volumeMounts:
    - name: source-code
      mountPath: /src
  - name: git-tag
    image: quay.io/rshop/git-alpine:master
    script: |
      #!/usr/bin/env sh
      LATEST_TAG_NAME="$(git describe --abbrev=0)"
      if [ "$LATEST_TAG_NAME" != "" ]
        ID_VERSION="$(echo "$LATEST_TAG_NAME" | sed 's/v//')"
        NEW_ID_VERSION="$(echo "$ID_VERSION + 0.1" | bc)"
      else
        NEW_ID_VERSION="1.0"
      fi
      git tag -a "v${NEW_ID_VERSION}" -m "Tag version ${NEW_ID_VERSION} auto-generated by Tekton" 
      git push origin "v${NEW_ID_VERSION}"
    volumeMounts:
    - name: source-code
      mountPath: /src
