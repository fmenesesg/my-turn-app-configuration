apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: deploy-with-argocd
spec:
  inputs:
    params:
      - default: '--'
        name: FLAGS
        type: string
      - default: 'develop'
        name: ENVIRONMENT
        type: string
      - name: LAYER
        type: string
    resources:
      - name: image
        type: image
  stepTemplate:
    envFrom:
      - secretRef:
          name: argocd-env-secret
    name: ''
    resources: {}
  steps:
    - image: 'quay.io/rshop/toolchain-cli-alpine:v0.1'
      name: get-manifest
      resources: {}
      script: |
        REPOSITORY="$(echo "$(inputs.resources.image.url)" | sed 's/quay.io\///')"
        export MANIFEST="$(curl -s "https://quay.io/api/v1/repository/$REPOSITORY/tag/?onlyActiveTags=true&specificTag=$(inputs.params.ENVIRONMENT)" | jq -r '.tags[0].manifest_digest')"
        env | grep -i manifest | tee env.local
      workingDir: /workspace
    - script: |
        bash
        source env.local
        argocd app set "$(inputs.params.LAYER)-$(inputs.params.ENVIRONMENT)" -p image.manifest="$(inputs.resources.image.url)@$MANIFEST" --project my-turn-app $(inputs.params.FLAGS)
      image: 'argoproj/argocd:v1.0.2'
      name: set-new-manifest
      workingDir: /workspace
      resources: {}
    - args:
        - >-
          argocd app sync "$(inputs.params.LAYER)-$(inputs.params.ENVIRONMENT)" --revision $(inputs.params.ENVIRONMENT) --project my-turn-app $(inputs.params.FLAGS)
      command:
        - /bin/bash
        - '-c'
      image: 'argoproj/argocd:v1.0.2'
      name: sync-configurations
      resources: {}
    - args:
        - argocd app wait "$(inputs.params.LAYER)-$(inputs.params.ENVIRONMENT)" --health --project my-turn-app $(inputs.params.FLAGS)
      command:
        - /bin/bash
        - '-c'
      image: 'argoproj/argocd:v1.0.2'
      name: wait
      resources: {}
